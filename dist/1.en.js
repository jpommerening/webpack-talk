webpackJsonp([1],{3:function(e,s,a){e.exports=a.p+"assets/webpack-5e7b2c.png"},6:function(e,s,a){e.exports=a.p+"assets/grunt-df0ee3.png"},7:function(e,s,a){e.exports=a.p+"assets/gulp-14cb08.png"},8:function(e,s,a){e.exports=a.p+"assets/requirejs-7fc87b.png"},17:function(e,s){"use strict";e.exports="<hr><h1>Demo</h1><hr>"},101:function(e,s){e.exports=' <h1>Architecture</h1> <h2 data-bespoke-bullet="">After a first glance</h2> <ul> <li>monolithic</li> <li>Ludicrous amount of configuration</li> </ul> <h2 data-bespoke-bullet="">Upon closer inspection</h2> <ul> <li>small core</li> <li>most of the functionality implemented in plugins</li> <li>huge ecosystem of plugins and loaders</li> </ul> <aside> </aside> '},102:function(e,s,a){e.exports=' <h1 data-bespoke-bullet=""><span class=tool-logo><img src='+a(6)+' height=48 alt="grunt logo"/></span> <a href=http://gruntjs.com>Grunt</a></h1> <p data-bespoke-bullet=""><strong>tasks</strong> and files</p> <h1 data-bespoke-bullet=""><span class=tool-logo><img src='+a(7)+' height=48 alt="gulp logo"/></span> <a href=http://gulpjs.com>Gulp</a></h1> <p data-bespoke-bullet=""><strong>files</strong> and transform-pipelines</p> <h1 data-bespoke-bullet=""><span class=tool-logo><img src='+a(8)+' height=48 alt="requirejs logo"/></span> <a href=http://requirejs.org>RequireJS</a></h1> <p data-bespoke-bullet=""><strong>modules</strong> and plugins</p> <h1 data-bespoke-bullet=""><span class=tool-logo><img src='+a(3)+' height=48 alt="webpack logo"/></span> <span class=name><a href=https://webpack.github.io>webpack</a></span></h1> <p data-bespoke-bullet=""><strong>modules</strong> and loader-pipelines</p> '},103:function(e,s){e.exports=" <h1><a href=https://github.com/webpack/webpack-dev-server><code>webpack-dev-server</code></a></h1> <ul> <li> <p>HTTP server that bundles modules on demand</p> </li> <li> <p>Intercepts file access and compiles to – and serves from – memory</p> </li> <li> <p>Incremental hot-reload</p> </li> </ul> "},104:function(e,s){e.exports=' <h1>What’s <span class=name>webpack</span>?</h1> <ul> <li>According to the website, it is a “<span class="name caps">module bundler</span>”</li> </ul> '},105:function(e,s){e.exports=" <h1>Loaders</h1> <h2>Configuration</h2> <ul> <li> <p>Loaders can be set up to handle <em>file patterns</em></p> </li> <li> <p>Configured loaders are executed <em>before</em> any loaders in <code>require()</code> calls</p> </li> </ul> <pre><code data-bespoke-bullet=\"\" class=language-js><span class=hljs-comment>/* webpack.config.js */</span>\n<span class=hljs-built_in>module</span>.exports = {\n  <span class=hljs-comment>/* ... */</span>\n  <span class=hljs-built_in>module</span>: {\n    <span class=hljs-attr>loaders</span>: [\n      {\n        <span class=hljs-attr>test</span>: <span class=hljs-regexp>/\\.(jsx?)$/</span>,\n        <span class=hljs-attr>loader</span>: <span class=hljs-string>'babel-loader'</span>\n      },\n      {\n        <span class=hljs-attr>test</span>: <span class=hljs-regexp>/\\.json$/</span>,\n        <span class=hljs-attr>loader</span>: <span class=hljs-string>'json-loader'</span>\n      }\n    ]\n  }\n};\n</code></pre> "},106:function(e,s){e.exports=" <h1>Loaders</h1> <h2><a href=https://github.com/babel/babel-loader><code>babel-loader</code></a></h2> <p>Compiles <em>ES2015</em> with <a href=https://babeljs.io>Babel</a></p> "},107:function(e,s){e.exports=" <h1>Loaders</h1> <h2><a href=https://github.com/webpack/css-loader><code>css-loader</code></a></h2> <ul> <li> <p>Returns a JS module exporting the given CSS as a string</p> </li> <li> <p>Uses <code>require()</code> to resolve <code>@import</code> and <code>url()</code></p> </li> <li> <p>All styles, fonts and images referenced from the CSS file are bundled!</p> </li> <li> <p>Can be used to “namespace” CSS by prefixing selectors with random <code>.class</code></p> </li> </ul> <pre><code data-bespoke-bullet=\"\" class=language-js><span class=hljs-keyword>const</span> styles = <span class=hljs-built_in>require</span>(<span class=hljs-string>'css!./path/to/styles.css'</span>);\n<span class=hljs-keyword>const</span> element = <span class=hljs-built_in>document</span>.createElement(<span class=hljs-string>'style'</span>);\n\nelement.type = <span class=hljs-string>'text/css'</span>;\nelement.styleSheet.cssText = styles;\n<span class=hljs-built_in>document</span>.head.appendChild( element );\n</code></pre> "},108:function(e,s){e.exports=' <h1>Loaders</h1> <h2><a href=https://github.com/webpack/file-loader><code>file-loader</code></a>, <a href=https://github.com/webpack/url-loader><code>url-loader</code></a></h2> <ul> <li> <p>Store input in a file and return resolved URL</p> </li> <li> <p><code>url-loader</code> can return <code>data:</code>-URLs for files that are small than <em>x</em> bytes</p> </li> </ul> <pre><code data-bespoke-bullet="" class=language-css><span class=hljs-selector-class>.icon-webpackjs</span> {\n  <span class=hljs-attribute>background-image</span>: <span class=hljs-built_in>url</span>(file!./webpack-logo-tiny.png);\n}\n</code></pre> '},109:function(e,s){e.exports=' <h1>Loaders</h1> <h2><a href=https://github.com/webpack/html-loader><code>html-loader</code></a></h2> <ul> <li> <p>Returns a JS module exporting the given HTML as a string</p> </li> <li> <p>Uses <code>require()</code> to resolve scripts, style-sheets and images</p> </li> </ul> <h2 data-bespoke-bullet=""><a href=https://github.com/thetalecrafter/img-loader><code>img-loader</code></a></h2> <ul> <li>Optimizes images with <code>optipng</code>, <code>jpegtran</code>, <code>gifsicle</code>, <code>svgo</code></li> </ul> '},110:function(e,s){e.exports=" <h1>Loaders</h1> <h2><a href=https://github.com/webpack/style-loader><code>style-loader</code></a></h2> <ul> <li> <p>Injects CSS code into the DOM</p> </li> <li> <p>Provides access to “namespace-<code>.classes</code>” generated by the <code>css-loader</code></p> </li> <li> <p><code>style-loader/url</code> can be used to embed external stylesheets (see <code>file-loader</code>)</p> </li> <li> <p><code>style-loader/usable</code> returns a <code>.use()</code> / <code>.unuse()</code> API to embed styles only when needed</p> </li> </ul> <pre><code data-bespoke-bullet=\"\" class=language-js><span class=hljs-built_in>require</span>( <span class=hljs-string>'style!css!./styles/normalize.css'</span> );\n<span class=hljs-built_in>require</span>( <span class=hljs-string>'style/url!file!css!sass!./styles/main.scss'</span> );\n</code></pre> "},111:function(e,s){e.exports=" <hr> <h1>Loaders</h1> <h2>Examples</h2> <hr> <aside> </aside> "},112:function(e,s){e.exports=" <h1>Ablauf</h1> <pre><code class=language-js><span class=hljs-keyword>const</span> code = <span class=hljs-built_in>require</span>( <span class=hljs-string>'style!css!sass!./path/to/code.css'</span> );\n</code></pre> <ul> <li> <p><code>ResolverPlugin</code> resolves <code>./path/to/code.css</code> (relative to the current file)</p> </li> <li> <p><code>ResolverPlugin</code> (another instance) resolves <code>style-loader</code>, <code>css-loader</code>, <code>sass-loader</code></p> </li> <li> <p>Reads CSS file from disk, passes raw content to <code>sass-loader</code></p> </li> <li> <p><code>sass-loader</code> compiles to CSS and returns result</p> </li> <li> <p>Result is passed to <code>css-loader</code></p> </li> <li> <p><code>css-loader</code> replaces <code>url()</code> with <code>require()</code>, returns JS code</p> </li> <li> <p>Result is passed to <code>style-loader</code></p> </li> <li> <p><code>style-loader</code> generates a module, which executes the code returned by <code>css-loader</code> and injects the result into the DOM</p> </li> </ul> "},113:function(e,s){e.exports=" <h1>Loaders</h1> <h2>Usage</h2> <pre><code class=language-js><span class=hljs-keyword>const</span> code = <span class=hljs-built_in>require</span>( <span class=hljs-string>'style!css!sass!./path/to/code.scss'</span> );\n</code></pre> <p>corresponds to</p> <p><em>(f<sub style=font-size:.8em>style</sub></em> ⋅ <em>f<sub style=font-size:.8em>css</sub></em> ⋅ <em>f<sub style=font-size:.8em>sass</sub>)( code, sourceMap )</em> → <em>( code’, sourceMap’ )</em></p> <aside> </aside> "},114:function(e,s){e.exports=' <h1>Loaders</h1> <h2 data-bespoke-bullet="">Functional &amp; composable</h2> <ul> <li> <p><em>f<sub style=font-size:.8em>loader</sub>( code, sourceMap )</em> → <em>( code’, sourceMap’ )</em></p> </li> <li> <p>Transform code from one representation to another</p> </li> <li> <p>Can be chained</p> </li> <li> <p><em>f<sub style=font-size:.8em>style</sub>( f<sub style=font-size:.8em>css</sub>( f<sub style=font-size:.8em>sass</sub>( code, sourceMap ) ) )</em> → <em>( code’, sourceMap’ )</em></p> <p>or rather</p> <p><em>(f<sub style=font-size:.8em>style</sub></em> ⋅ <em>f<sub style=font-size:.8em>css</sub></em> ⋅ <em>f<sub style=font-size:.8em>sass</sub>)( code, sourceMap )</em> → <em>( code’, sourceMap’ )</em></p> </li> <li> <p>Last loader must return a JS module (so it can be bundled)</p> </li> </ul> '},115:function(e,s){e.exports=" <h1>Plugins</h1> <h2><code>ResolverPlugin</code></h2> <ul> <li> <p>Part of <span class=name>webpack</span></p> </li> <li> <p>Looks up modules in file system</p> </li> <li> <p>Has plugins that implement various resolve-strategies</p> </li> <li> <p>Pre-configured but can be overwritten in configuration</p> </li> </ul> <pre><code data-bespoke-bullet=\"\" class=language-js><span class=hljs-keyword>const</span> ResolverPlugin = <span class=hljs-built_in>require</span>( <span class=hljs-string>'webpack'</span> ).ResolverPlugin;\n\n<span class=hljs-built_in>module</span>.exports = {\n  <span class=hljs-attr>plugins</span>: [\n    <span class=hljs-keyword>new</span> ResolverPlugin( [\n      <span class=hljs-keyword>new</span> ResolverPlugin.DirectoryDescriptionFilePlugin( <span class=hljs-string>'bower.json'</span>, [ <span class=hljs-string>'main'</span> ] ),\n      <span class=hljs-keyword>new</span> ResolverPlugin.DirectoryDescriptionFilePlugin( <span class=hljs-string>'package.json'</span>, [ <span class=hljs-string>'browser'</span>, <span class=hljs-string>'main'</span> ] )\n    ] )\n  ]\n};\n</code></pre> <aside> </aside> "},116:function(e,s){e.exports=' <h1>Plugins</h1> <h2><code>ExtractTextPlugin</code></h2> <ul> <li>Extracts text/code (CSS, for example) into an external file during build</li> </ul> <h2><code data-bespoke-bullet="">NgAnnotatePlugin</code></h2> <ul> <li>Writes <code>ng-annotate</code> annotations for safe minification</li> </ul> <h2><code data-bespoke-bullet="">PrefetchPlugin</code></h2> <ul> <li>Can populate cache with modules before they are imported</li> </ul> <aside> </aside> '},117:function(e,s){e.exports=" <hr> <h1>Plugins</h1> <h2>Examples</h2> <hr> <aside> </aside> "},118:function(e,s){e.exports=" <h1>Plugins</h1> <h2>Usage</h2> <pre><code class=language-js><span class=hljs-comment>/* webpack.config.js */</span>\n<span class=hljs-keyword>const</span> webpack = <span class=hljs-built_in>require</span>( <span class=hljs-string>'webpack'</span> );\n<span class=hljs-built_in>module</span>.exports = {\n  <span class=hljs-attr>plugins</span>: [\n    <span class=hljs-keyword>new</span> webpack.optimize.UglifyJsPlugin( { <span class=hljs-comment>/* options */</span> } )\n  ]\n};\n</code></pre> <aside> </aside> "},119:function(e,s){e.exports=" <h1>Plugins</h1> <ul> <li> <p>Attach themselves to pre-defined extension points in <span class=name>webpack</span></p> </li> <li> <p><span class=name>webpack</span> is mostly made out of plugins</p> </li> <li> <p>Used sparingly during development</p> </li> </ul> <aside> </aside> "},120:function(e,s,a){e.exports="<img src="+a(3)+' alt="webpack logo" class=plain /> <h1 class=name>webpack</h1> <aside> </aside> '},124:function(e,s,a){var l=[{html:a(120),data:{"bespoke-hash":"webpack"}},{html:a(104),data:{"bespoke-hash":"intro"}},{html:"",data:{"bespoke-hash":"intro-2","bespoke-backdrop":"walter"}},{html:a(102),data:{"bespoke-hash":"comparison"}},{html:a(101),data:{"bespoke-hash":"architecture"}},{html:a(119),data:{"bespoke-hash":"plugins"}},{html:a(118),data:{"bespoke-hash":"plugins-usage"}},{html:a(117),data:{"bespoke-hash":"plugins-examples"}},{html:a(115),data:{"bespoke-hash":"plugins-examples-1"}},{html:a(116),data:{"bespoke-hash":"plugins-examples-2"}},{html:a(114),data:{"bespoke-hash":"loaders"}},{html:a(113),data:{"bespoke-hash":"loaders-usage"}},{html:"",data:{"bespoke-hash":"loaders-what","bespoke-backdrop":"jesse"}},{html:a(112),data:{"bespoke-hash":"loaders-process"}},{html:a(111),data:{"bespoke-hash":"loaders-examples"}},{html:a(106),data:{"bespoke-hash":"loaders-examples-babel"}},{html:a(107),data:{"bespoke-hash":"loaders-examples-css"}},{html:a(108),data:{"bespoke-hash":"loaders-examples-file+url"}},{html:a(110),data:{"bespoke-hash":"loaders-examples-style"}},{html:a(109),data:{"bespoke-hash":"loaders-examples-html+img"}},{html:a(105),data:{"bespoke-hash":"loaders-config"}},{html:a(103),data:{"bespoke-hash":"dev-server"}},{html:a(17),data:{"bespoke-hash":"demo"}},{html:"",data:{"bespoke-hash":"whoa","bespoke-backdrop":"whoa"}}];e.exports=l.map(function(e){var s=document.createElement("section");return s.innerHTML=e.html,Object.keys(e.data).forEach(function(a){s.setAttribute("data-"+a,e.data[a])}),s})}});
//# sourceMappingURL=en.js.map